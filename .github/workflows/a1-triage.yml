name: A-1 Bot — Issue Triage
on:
  issues:
    types: [opened, edited]
permissions:
  contents: read
  issues: write
jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - name: Classify & label
        uses: actions/github-script@v7
        with:
          script: |
            const t = (context.payload.issue.title||'').toLowerCase();
            const b = (context.payload.issue.body||'').toLowerCase();
            const text = t + ' ' + b;
            const labels = new Set();
            if (/\bbug|error|broken|fails?\b/.test(text)) labels.add('bug');
            if (/\bfeature|enhancement|request|add\b/.test(text)) labels.add('feature');
            if (/\bhow|what|why|help|question\b/.test(text)) labels.add('question');
            if (/\b(urgent|asap|blocked|production|down)\b/.test(text)) labels.add('priority: high');
            if (labels.size) {
              await github.rest.issues.addLabels({
                ...context.repo, issue_number: context.issue.number, labels: [...labels]
              });
            }
            const blocks = {
              bug: `**Bug checklist**
- Steps to reproduce
- Expected vs actual
- URL / screen (if any)
- Browser / device
- Console errors (copy/paste)`,
              feature: `**Feature checklist**
- Problem this solves
- Desired outcome
- Must-have vs nice-to-have
- Screens/mockups (if any)`,
              question: `**Question guide**
- Where you got stuck
- What you tried
- Goal/outcome`
            };
            let msg = "Thanks for opening this! We’ll jump on it.\n\n";
            if (labels.has('bug')) msg += blocks.bug + "\n\n";
            else if (labels.has('feature')) msg += blocks.feature + "\n\n";
            else if (labels.has('question')) msg += blocks.question + "\n\n";
            msg += "_If this touches scheduling, quotes, or emails, include **customer initials only** and whether it’s **Prod** or **Test**._";
            await github.rest.issues.createComment({ ...context.repo, issue_number: context.issue.number, body: msg });
