name: A-1 Bot — Issue Triage
on:
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const title = (context.payload.issue.title || '').toLowerCase();
            const body  = (context.payload.issue.body  || '').toLowerCase();
            const text  = title + ' ' + body;

            const labels = [];
            if (/\bbug|error|broken|fails?\b/.test(text)) labels.push('bug');
            if (/\bfeature|enhancement|request|add\b/.test(text)) labels.push('feature');
            if (/\bhow|what|why|help|question\b/.test(text)) labels.push('question');
            if (/\b(urgent|asap|blocked|production|down)\b/.test(text)) labels.push('priority: high');

            if (labels.length) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels
              });
            }

            let msg = "Thanks for opening this! We’ll jump on it.\n\n";
            if (labels.includes('bug')) {
              msg += "**Bug checklist**\\n- Steps to reproduce\\n- Expected vs actual\\n- URL/screen (if any)\\n- Browser/device\\n- Console errors (copy/paste)\\n\\n";
            } else if (labels.includes('feature')) {
              msg += "**Feature checklist**\\n- Problem this solves\\n- Desired outcome\\n- Must-have vs nice-to-have\\n- Screens/mockups (if any)\\n\\n";
            } else if (labels.includes('question')) {
              msg += "**Question guide**\\n- Where you got stuck\\n- What you tried\\n- Goal/outcome\\n\\n";
            }
            msg += "_If this touches scheduling, quotes, or emails, include **customer initials only** and whether it’s **Prod** or **Test**._";

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: msg
            });
